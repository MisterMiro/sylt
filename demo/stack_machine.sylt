## implementation of a calculator using a stack

let OpCode = makeEnum([
    "Push"
    "Add"
    "Sub"
    "Mul"
    "Div"
    "Eq"
    "Print"
    "Ret"
])

let exec(prog) = do
    let ip = 0
    let stack = []

    let read() = do
        let code = List.get(ip prog)
        ip += 1
        code
    end

    let pop() = do
        let value = List.get(-1 stack)
        stack -= 1
        value
    end

    let run = true
    while run: do
        let code = read()
        if code is OpCode.Push: stack += read()
        else if code is OpCode.Add: do
            let b = pop()
            let a = pop()
            stack += a + b
        end
        else if code is OpCode.Sub: do
            let b = pop()
            let a = pop()
            stack += a - b
        end
        else if code is OpCode.Mul: do
            let b = pop()
            let a = pop()
            stack += a * b
        end
        else if code is OpCode.Div: do
            let b = pop()
            let a = pop()
            stack += a / b
        end
        else if code is OpCode.Eq: do
            let b = pop()
            let a = pop()
            stack += a is b
        end
        else if code is OpCode.Print: printLn(List.last(stack))
        else if code is OpCode.Ret: run <- false
    end
end

let prog = [
    OpCode.Push 1
    OpCode.Push 2
    OpCode.Add

    OpCode.Push 10
    OpCode.Mul

    OpCode.Push 0.9375
    OpCode.Div

    OpCode.Push 16
    OpCode.Sub

    OpCode.Push 8
    OpCode.Sub

    OpCode.Push 8
    OpCode.Eq

    OpCode.Print
    OpCode.Ret
]
exec(prog)
