<h2> Types </h2>

<p>sylt is dynamically typed, meaning type checking is done at runtime. There are 7 types:


<h4> Nil </h4>

<p> This type is associated with one value, nil.
It is used when there is no meaningful value to return or store. </p>

<h4> Bool </h4>

<p> The boolean type has two possible values, true and false. It is the result of all comparison and equality
operators.
</p>

<h4> Number </h4>

<p> The number type is used for numbers. </p>

<h4> Range </h4>

<p> A range of numbers. </p>

<h4> List </h4>

<p> A dynamic array. It is able to contain an indefinite number of values
of different types. Values are read or modified by accessing numeric indices in the array. It is
contiguous, meaning there are no gaps between items, or in other words, it has a start and an end.
</p>

<h4> Dict </h4>

<p> The Dict type represents an associative array, commonly known as a dictionary or hashmap. 
It contains any number of keys, each associated with a value.
Unlike with the list type, here is no correct order to iterate over its values.
</p>

<h4> Function </h4>

<p> The Function type represents a callable function. Functions can be passed around like any other
value.

</p>

</p>

<h2> Operators </h2>

<h4> + </h4>

<p> Used for adding numbers and concatenating strings and lists <p>

<h4> - </h4>

<p> Used for subtracting two numbers, as a unary (prefix) minus for 
negating numbers or whole expressions, and for removing elements at the start or end of lists.
</p>

<h4> * </h4>

<p> Used for multiplying two numbers. </p>

<h4> / </h4>

<p> Used for dividing two numbers. Dividing by zero is an error and will halt the interpreter
</p>

<h4> % </h4>

<p> Used for modular arithmetic by performing euclidean division. It computes the remainder of
division </p>

<h4> # </h4>

<p> Used for getting the length of lists, dicts, and strings </p>



<h4> < </h4>

<p> Used for checking if a number is less than another </p>

<h4> <= </h4>

<p> Used for checking if a number is less than or equal to another </p>

<h4> > </h4>

<p> Used for checking if a number is greater than another </p>

<h4> >= </h4>

<p> Used for checking if a number is greater than or equal to another </p>



<h4> is </h4>

<p> Used for checking if two values are equal. Comparing values of different types is not an error.
</p>

<h4> not </h4>

<p> Used for checking if two values are inequal. </p>

<h4> and </h4>

<p> The and operator  </p>

<h4> or </h4>

<p> The or operator  </p>



<h4> <- </h4>

<p> Performs assignment. The left-hand side is the variable to reassign, and
the right-hand side the new value. </p>

<h4> += </h4>

<p> Shorthand for assigning a variable to itself + something. </p>

<h4> -= </h4>

<p> Shorthand for assigning a variable to itself - something. </p>

<h4> *= </h4>

<p> Shorthand for assigning a variable to itself * something. </p>

<h4> /= </h4>

<p> Shorthand for assigning a variable to itself / something. </p>

<h4> %= </h4>

<p> Shorthand for assigning a variable to itself % something. </p>

<h4> .. </h4>

<p> Used for creating a range. </p>
