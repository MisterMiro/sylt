title: Prelude
comment: Automatically included in all files, meaning no 'Prelude' prefix is needed.

name: gdict
args:
comment: A dictionary containing all global variables.

name: print
args: value
comment: Prints a value to standard output.

name: printLn
args: value
comment: Prints a value followed by a newline to standard output.

name: readIn
args:
comment: Returns input read from standard input.

name: toString
args: value
comment: Converts a value to its string representation.

name: toNum
args: value
comment: Attempts to convert a value to a number, returning 0 on failure.

name: floatEq
args: a b epsilon
comment: Returns true if a and b are equal to within a tolerance of epsilon.

name: typeOf
args: value
comment: Returns the type of the value as a string.

name: ensure
args: condition
comment: Halts if the condition is false.

name: todo
args:
comment: Halts if unfinished code is executed.

name: unreachable
args:
comment: Halts if supposedly unreachable code is executed.

name: isZero
args: num
comment: Returns true if num is 0.

name: isOne
args: num
comment: Returns true if num is 1.

name: isPositive
args: num
comment: Returns true if num is greater than or equal to 0.

name: isNegative
args: num
comment: Returns true if num is less than 0.

name: isEven
args: num
comment: Returns true if num is even.

name: isOdd
args: num
comment: Returns true if num is odd.

name: add
args: a b
comment: Returns a + b.

name: sub
args: a b
comment: Returns a - b.

name: mul
args: a b
comment: Returns a * b.

name: div
args: a b
comment: Returns a / b.

name: rem
args: a b
comment: Returns a % b.

name: makeEnum
args: names
comment: Returns a dictionary containing the given names with sequential integers as values.

name: rep
args: f times
comment: Calls a function f n times with the current iteration as the argument.


title: File

name: Mode
args:
comment: Enumeration containing Read, ReadBinary, Write, WriteBinary, Append, and AppendBinary.

name: open
args: path mode
comment: Opens a file in the selected mode and returns a handle to it.

name: close
args: handle
comment: Closes an open file handle.

name: write
args: value handle
comment: Converts the value to a string and writes it to a file.

name: read
args: handle
comment: Reads the entire file into a string.

name: size
args: handle
comment: Returns the size in bytes of a file.

name: del
args: path
comment: Deletes a file.

    
title: System

name: version
args:
comment: The current sylt version in the form of a string.

name: platform
args:
comment: The platform (operating system) name.

name: memInfo
args:
comment: Returns a dictionary containing statistics about memory usage.

name: memSizes
args:
comment: Returns a dictionary containing the byte sizes of all C types.

name: src
args:
comment: Returns information about the current source code and line number.

name: run
args: command
comment: Runs a command in the OS shell.

name: halt
args: message
comment: Halts execution with an error message.

name: time
args: fmt
comment: Returns the current time and/or date, formatted using %H-%M-%S notation.

name: timestamp
args:
comment: Returns a numeric timestamp accurate to a second.

name: cpuClock
args:
comment: Returns how much CPU time was used. 

    
title: List

name: length
args: list
comment: Returns the number of items in the list.

name: get
args: index list
comment: Returns the value at the given index.

name: set
args: index newValue list
comment: Sets the value at the given index.

name: swap
args: indexA indexB list
comment: Swaps the values at the provided indices.

name: add
args: index value list
comment: Inserts a value at the given index.

name: push
args: value list
comment: Appends a value to the back of the list.

name: del
args: index list
comment: Deletes the value at the given index.

name: pop
args: list
comment: Deletes the value at the end of the list and returns it.

name: first
args: list
comment: Returns the first item in a list.

name: last
args: list
comment: Returns the last item in a list.

name: count
args: value list
comment: Counts how many times a unique value occurs in a list.

name: contains
args: value list
comment: Returns true if the list contains a value.

name: rev
args: list
comment: Returns a reversed copy of the list.

name: range
args: min max
comment: Returns a list containing all numbers from min up to max.

name: iter
args: f list
comment: Calls f for each item in the list, with the value as the first and index as the second argument.

name: forEach
args: f list
comment: Calls f for each item in the list with the value as the argument.

name: map
args: f list
comment: Returns a new list with all values passed through f.

name: filter
args: f list
comment: Returns a new list with all values filtered through f.

name: fold
args: f init list
comment: Folds the list down to a single value by calling f, with the initial value set to init.

name: sum
args: list
comment: Returns the sum of all numbers in the list.

name: average
args: list
comment: Returns the average value in the list.

name: mean
args: list
comment: Returns the mean value in the list.

name: sortBy
args: f list
comment: Sorts the list by comparing each adjacent pair in the list using the function f.

name: sort
args: list
comment: Sorts the list in ascending order.

name: flatten
args: list
comment: Returns a copy of the list with any nested lists flattened out to the same level.

name: dedup
args: list
comment: Returns a copy of the list with all duplicate values removed.

name: any
args: f list
comment: Returns true if any value in the list satisfies the predicate f.

name: all
args: f list
comment: Returns true if all values in the list satisfy the predicate f.


title: Dict

name: length
args: dict
comment: Returns the number of items (keys) in the dictionary.

name: get
args: key dict
comment: Returns the value with the given key.

name: getOrDefault
args: key default dict
comment: Returns the value with the given key or a default value if not found.

name: set
args: key newValue dict
comment: Sets the value for the given key to newValue.

name: iter
args: f dict
comment: Calls f for each entry with the key as the first argument and the value as the second.

name: toList
args: dict
comment: Returns a list of key/value pairs each in the form of [key value]. 

name: hasKey
args: dict
comment: Returns true if the dictionary contains a key. 

name: keys
args: dict
comment: Returns a list of all keys in the dictionary.

name: values
args: dict
comment: Returns a list of all values in the dictionary.


title: String

name: letters
args:
comment: A string containing all ASCII letters, a-z (lowercase).

name: digits
args:
comment: A string containing all ASCII digits, 0-9.

name: punctuation
args:
comment: A string containing all ASCII punctuation characters.

name: whitespace
args:
comment: A string containing all ASCII whitespace characters.

name: length
args: string
comment: The number of characters (bytes) in the string.

name: chars
args: string
comment: A list of all characters in the string.

name: join
args: list
comment: Joins a list of values into a string.

name: split
args: string sep
comment: Splits a string into a list of substrings based on a separator.

name: lower
args: string
comment: Returns the all-lowercase version of a string.

name: upper
args: string
comment: Returns the all-uppercase version of a string.

name: swapCase
args: string
comment: Swaps all uppercase and lowercase letters in a string.

name: isLower
args: string
comment: Returns true if all characters in the string are lowercase.

name: isUpper
args: string
comment: Returns true if all characters in the string are uppercase.

name: isWhitespace
args: string
comment: Returns true if all characters in the string are whitespace.

name: startsWith
args: string start
comment: Returns true if the string starts with the given phrase.

name: endsWith
args: string end
comment: Returns true if the string ends with the given phrase.

name: trimStart
args: string
comment: Removes all leading whitespace.

name: trimEnd
args: string
comment: Removes all trailing whitespace.

name: trim
args: string
comment: Removes both leading and trailing whitespace.

name: find
args: string find pos
comment: Finds and returns the index of a substring starting at pos, returning -1 if not found.

name: replace
args: string find replace
comment: Replaces all occurrences of a substring with another.

name: leftPad
args: string w pattern
comment: Left-pads the string with the pattern string so that it is w characters wide.

name: rightPad
args: string w pattern
comment: Right-pads the string with the pattern string so that it is w characters wide.

name: centerPad
args: string w pattern
comment: Center-pads the string with the pattern string so that it is w characters wide.


title: Math

name: pi
args:
comment: The constant pi.

name: e
args:
comment: Euler's number.

name: Sign
args:
comment: Enumeration containing Sign.Negative, Sign.Zero, and Sign.Positive.

name: signum
args: x
comment: Returns Sign.Positive, Sign.Negative, or Sign.Zero depending on the sign of the number.

name: abs
args: x
comment: Returns the absolute value of a number.

name: log
args: x base
comment: Returns the exponent needed to raise a base to in order to produce x.

name: pow
args: base exp
comment: Returns base raised to the power of exp.

name: sqrt
args: x
comment: Returns the square root of x.

name: min
args: a b
comment: Returns the smallest value of a and b.

name: max
args: a b
comment: Returns the largest value of a and b.

name: clamp
args: x min max
comment: Returns x clamped to between min and max.

name: lerp
args: a b t
comment: Linearly interpolates between a and b based on t.

name: floor
args: x
comment: Rounds x down.

name: ceil
args: x
comment: Rounds x up.

name: round
args: x
comment: Rounds x to the nearest integer.

name: rad
args: degrees
comment: Converts degrees to radians.

name: deg
args: radians
comment: Converts radians to degrees.

name: sin
args: x
comment: Returns the sine of x.

name: cos
args: x
comment: Returns the cosine of x.

name: tan
args: x
comment: Returns the tangent of x.

name: asin
args: x
comment: Returns the arc-sine of x.

name: acos
args: x
comment: Returns the arc-cosine of x.

name: atan
args: x
comment: Returns the arc-tangent of x.

name: sinh
args: x
comment: Returns the hyperbolic sine of x.

name: cosh
args: x
comment: Returns the hyperbolic cosine of x.

name: tanh
args: x
comment: Returns the hyperbolic tanget of x.

name: asinh
args: x
comment: Returns the hyperbolic arc-sine of x.

name: acosh
args: x
comment: Returns the hyperbolic arc-cosine of x.

name: atanh
args: x
comment: Returns the hyperbolic arc-tangent of x. 


title: Vec3

name: new
args: x y z
comment: Creates a new 3D vector.

name: dot
args: a b
comment: Computes the dot product of two vectors.

name: cross
args: a b
comment: Computes the cross product of two vectors.

name: length
args: vec
comment: Computes the size of a vector.

name: norm
args: vec
comment: Returns a normalized (scaled so that its size=1) version of the vector. 

name: add
args: a b
comment: Adds two vectors and returns the result.

name: sub
args: a b
comment: Subtracts two vectors and returns the result.

name: addScalar
args: v s
comment: Adds a scalar to a vector and returns the result.

name: subScalar
args: v s
comment: Subtracts a scalar from a vector and returns the result.

name: divScalar
args: v s
comment: Divides a vector by a scalar and returns the result.

name: scale
args: vec scalar
comment: Scales the vector by on all axis.


title: Rand

name: range
args: min max
comment: Returns a random number from min up to max.

name: fiftyFifty
args:
comment: Has a 50/50 chance to return true.

name: item
args: list
comment: Returns a random item from the list.

name: scramble
args: list
comment: Sorts the list in a random order.

name: seed
args: seed
comment: Sets the seed of the random number generator.
